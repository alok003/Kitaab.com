both login possible for both user types
for contrib update profile

for admin local auth possible

users{
    u_id:autogenerated
    email:req,gsignin
    pass:req,gsignin
    name:req,gsignin
    iseditor:false/true   initial false toggle when form filled extra details
    clg:
    branch:
    passing_yr:
    filecontrib[file_id]
}
admin{
    u_id:autogenerated
    name:req,
    pass:req
}
fileD{
    file_id:autogenerated
    f_path:req 
    User:u_id
    likes[u_id]
    subject:req
    tags[supportive_tags]:req
}





in view doc view and dwnld after login like too
in upload doc if(is_editor)  then show them their dashboard else give form to fill for is_editor
    dashboard consisits of new upload form and old upload stats

request is currently disabled

admin gives login form



Atlas username pass for this project
KitaabComADM
wpELrj5wPcuc0nuu



mongodb+srv://KitaabComADM:<password>@cluster0.pitwm0u.mongodb.net/?retryWrites=true&w=majority



make template
add backend
all page render control
user db 
add avtr to user 
google sign in
user upload file








manage own{
    dashboard preview{
        two part{
            all owned files listed down  with file title  with delete btn and no.of likes
            on click open modal{
                edit file specs
            }
        }{
            update profile{
                password
                confirm password
            }
        }
    }
}

      <ol class="list-group list-group-numbered">
        <%for(i in files){%>
          <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
              <div class="fw-bold"><%=i.title%></div>
              <%=i.description%>
            </div>
            <span class="badge bg-primary rounded-pill"><%i.likes%></span>
          </li>
          <%}%>
      </ol>


user view file

like system

user dashboard
admin dashboard

extras{
    gmail se avtr aaya chhange kr 
    nodemailer
}




user{
    filesContrib[fileid],
    liked[fileid]
}





file {
    fileid
    title
    subject 
    user id
    likes[userid]
    tags[string]
}



user me like kro file to dikhe
likes me aaye isne kiya 
delete syncronisation
one man one like 



about page banao 


admin page banao
{
    {
        make or delete admin
    }
    {
        review post 
        delete post
    }
    {
        delete user
        change details of user 
    }
}